1)File Programs 

i)file exist or not

touch ELF.txt
echo "Enter the Filename"
read filename
if [  !  -f  $filename ];
then
echo "Filename $filename does not exists"
exit 1
else
echo "$filename" | tr '[:upper:]' '[:lower:]'
fi

ii)Uppercase to lowercase

touch ELF.txt
echo "Enter the Filename"
read filename
if [  !  -f  $filename ];
then
echo "Filename $filename does not exists"
exit 1
else
echo "$filename" | tr '[:upper:]' '[:lower:]'
fi

iii)Count words,lines characters

# Create a file named "new.txt" with some initial content
touch new.txt
echo "Type something .." >> new.txt

# Prompt the user to enter a file name
echo "Enter the file name"
read file

# Check if the specified file exists
if [ ! -f "$file" ]; then
    echo "File $file does not exist"
    exit 1
fi

# Count characters, words, and lines in the file
c=$(cat "$file" | wc -c)
w=$(cat "$file" | wc -w)
l=$(cat "$file" | wc -l)

# Display the results
echo "Number of characters in $file is $c"
echo "Number of words in $file is $w"
echo "Number of lines in $file is $l"
  
2) Showing Various System Information
  
echo "SYSTEM INFORMATION"
echo “Hello ,$LOGNAME”
echo “Current Date is = $(date)”
echo “User is ‘who I am’”
echo “Current Directory = $(pwd)”
echo "Network Name and Node Name = $(uname -n)"
echo "Kernal Name =$(uname -s)"
echo "Kernal Version=$(uname -v)"
echo "Kernal Release =$(uname -r)"
echo "Kernal OS =$(uname -o)"
echo “Proessor Type = $(uname -p)”
echo “Kernel Machine Information = $(uname –m)”
echo "All Information =$(uname -a)"

3)Manipulate date/Time

  
current_date=$(date "+%Y-%m-%d")
current_time=$(date "+%H:%M:%S")
# Display the current date and time
echo "Current Date: $current_date"
echo "Current Time: $current_time"

4)String and Numerical handling functions

i)Compare Strings

echo "Enter two string"
read a
read b
if [ -z $a ]
then 
echo "First String is empty: Null String"
fi
if [ -z $b ]
then 
echo "Second String is empty: Null String"
fi
if [ $a = $b ]
then 
echo "Strings are equal: strings Matched"
else
echo "Strings are not equal: Strings not match"
fi

ii)Palindrome

echo "Enter the number : "
read n
num=0
a=$n
while [ $n -gt 0 ]
do
num=`expr $num \* 10`
k=`expr $n % 10`
num=`expr $num + $k`
n=`expr $n / 10` 
done
if [ $num -eq $a ]
then
echo "It's a palindrome"
else
echo "Not a Palindrome"
fi

iii)First and last character

a="abcdef"
first="${a:0:1}"
last="${a:  -1}"
echo "$first"
echo "$last"

3) Loop and Selection constructs

i)Menu driven program to perform all arithmetic operation using case statement.

echo " Enter the 1st number"
read n1
echo " Enter the 2nd number"
read n2
echo "Menu: 1:Add 2:Sub 3:Mul 4:Div 5:Mod"
echo "Enter the choice"
read ch
case $ch in
1) echo "Addition is: $((n1+n2))";;
2) echo "Subtraction is: $((n1-n2))";;
3) echo "Multiplication is: $((n1*n2))";;
4) echo "Division is: $((n1\n2))";;
5) echo ""Invalid choice...
esac
ii) Print Patterns

echo "Enter the no of rows : "
read r
i=1
t=1
while [ $i -le $r ]
do
  j=1
  while [ $j -le $i ]
  do
    echo -n "*"
    j=$((j+1))
  done
  echo 
  i=$((i+1))

